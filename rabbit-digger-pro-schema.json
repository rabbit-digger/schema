{
  "title": "Config",
  "type": "object",
  "properties": {
    "id": {
      "type": "string"
    },
    "net": {
      "additionalProperties": {
        "type": "object",
        "anyOf": [
          {
            "title": "AliasNetConfig",
            "description": "A net refering to another net.",
            "type": "object",
            "required": [
              "net",
              "type"
            ],
            "properties": {
              "net": {
                "$ref": "#/definitions/net_alias_NetRef"
              },
              "type": {
                "type": "string",
                "const": "alias"
              }
            }
          },
          {
            "title": "CombineNetConfig",
            "description": "CombineNet merges multiple nets into one.",
            "type": "object",
            "required": [
              "lookup_host",
              "tcp_bind",
              "tcp_connect",
              "type",
              "udp_bind"
            ],
            "properties": {
              "lookup_host": {
                "$ref": "#/definitions/net_combine_NetRef"
              },
              "tcp_bind": {
                "$ref": "#/definitions/net_combine_NetRef"
              },
              "tcp_connect": {
                "$ref": "#/definitions/net_combine_NetRef"
              },
              "type": {
                "type": "string",
                "const": "combine"
              },
              "udp_bind": {
                "$ref": "#/definitions/net_combine_NetRef"
              }
            }
          },
          {
            "title": "DNSNetConfig",
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "net": {
                "default": "local",
                "allOf": [
                  {
                    "$ref": "#/definitions/net_dns_sniffer_NetRef"
                  }
                ]
              },
              "type": {
                "type": "string",
                "const": "dns_sniffer"
              }
            }
          },
          {
            "title": "HttpNetConfig",
            "type": "object",
            "required": [
              "server",
              "type"
            ],
            "properties": {
              "net": {
                "default": "local",
                "allOf": [
                  {
                    "$ref": "#/definitions/net_http_NetRef"
                  }
                ]
              },
              "server": {
                "description": "An address contains host and port.\nFor example: example.com:80, 1.1.1.1:53, [::1]:443",
                "type": "string"
              },
              "type": {
                "type": "string",
                "const": "http"
              }
            }
          },
          {
            "title": "LocalNetConfig",
            "description": "A local network.",
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "bind_addr": {
                "description": "bind to address",
                "type": [
                  "string",
                  "null"
                ],
                "format": "ip"
              },
              "bind_device": {
                "description": "bind to device",
                "type": [
                  "string",
                  "null"
                ]
              },
              "connect_timeout": {
                "description": "timeout of TCP connect, in seconds.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint64",
                "minimum": 0.0
              },
              "mark": {
                "description": "set SO_MARK on linux",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint32",
                "minimum": 0.0
              },
              "nodelay": {
                "description": "set nodelay. default is true",
                "default": null,
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "ttl": {
                "description": "set ttl",
                "default": null,
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint32",
                "minimum": 0.0
              },
              "type": {
                "type": "string",
                "const": "local"
              }
            }
          },
          {
            "title": "EmptyConfig",
            "type": "null",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "const": "noop"
              }
            }
          },
          {
            "title": "ObfsNetConfig",
            "type": "object",
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "obfs_param",
                  "obfs_type"
                ],
                "properties": {
                  "obfs_param": {
                    "type": "string"
                  },
                  "obfs_type": {
                    "type": "string",
                    "enum": [
                      "http_simple"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "obfs_type"
                ],
                "properties": {
                  "obfs_type": {
                    "type": "string",
                    "enum": [
                      "plain"
                    ]
                  }
                }
              }
            ],
            "required": [
              "type"
            ],
            "properties": {
              "net": {
                "default": "local",
                "allOf": [
                  {
                    "$ref": "#/definitions/net_obfs_NetRef"
                  }
                ]
              },
              "type": {
                "type": "string",
                "const": "obfs"
              }
            }
          },
          {
            "title": "RemoteNetConfig",
            "type": "object",
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "mode",
                  "remote"
                ],
                "properties": {
                  "mode": {
                    "type": "string",
                    "enum": [
                      "active"
                    ]
                  },
                  "remote": {
                    "description": "An address contains host and port.\nFor example: example.com:80, 1.1.1.1:53, [::1]:443",
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "bind",
                  "mode"
                ],
                "properties": {
                  "bind": {
                    "description": "An address contains host and port.\nFor example: example.com:80, 1.1.1.1:53, [::1]:443",
                    "type": "string"
                  },
                  "mode": {
                    "type": "string",
                    "enum": [
                      "passive"
                    ]
                  }
                }
              }
            ],
            "required": [
              "token",
              "type"
            ],
            "properties": {
              "net": {
                "default": "local",
                "allOf": [
                  {
                    "$ref": "#/definitions/net_remote_NetRef"
                  }
                ]
              },
              "token": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "const": "remote"
              },
              "udp_in_tcp": {
                "default": false,
                "type": "boolean"
              }
            }
          },
          {
            "title": "ResolveConfig",
            "type": "object",
            "required": [
              "net",
              "resolve_net",
              "type"
            ],
            "properties": {
              "ipv4": {
                "default": true,
                "type": "boolean"
              },
              "ipv6": {
                "default": true,
                "type": "boolean"
              },
              "net": {
                "$ref": "#/definitions/net_resolve_NetRef"
              },
              "resolve_net": {
                "$ref": "#/definitions/net_resolve_NetRef"
              },
              "type": {
                "type": "string",
                "const": "resolve"
              }
            }
          },
          {
            "title": "RuleNetConfig",
            "type": "object",
            "required": [
              "rule",
              "type"
            ],
            "properties": {
              "lru_cache_size": {
                "default": 32,
                "type": "integer",
                "format": "uint",
                "minimum": 0.0
              },
              "rule": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/net_rule_RuleItem"
                }
              },
              "type": {
                "type": "string",
                "const": "rule"
              }
            }
          },
          {
            "title": "SelectNetConfig",
            "type": "object",
            "required": [
              "list",
              "selected",
              "type"
            ],
            "properties": {
              "list": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/net_select_NetRef"
                }
              },
              "selected": {
                "$ref": "#/definitions/net_select_NetRef"
              },
              "type": {
                "type": "string",
                "const": "select"
              }
            }
          },
          {
            "title": "SSNetConfig",
            "type": "object",
            "required": [
              "cipher",
              "password",
              "server",
              "type"
            ],
            "properties": {
              "cipher": {
                "$ref": "#/definitions/net_shadowsocks_Cipher"
              },
              "net": {
                "default": "local",
                "allOf": [
                  {
                    "$ref": "#/definitions/net_shadowsocks_NetRef"
                  }
                ]
              },
              "password": {
                "type": "string"
              },
              "server": {
                "description": "An address contains host and port.\nFor example: example.com:80, 1.1.1.1:53, [::1]:443",
                "type": "string"
              },
              "type": {
                "type": "string",
                "const": "shadowsocks"
              },
              "udp": {
                "default": false,
                "type": "boolean"
              }
            }
          },
          {
            "title": "Socks5NetConfig",
            "type": "object",
            "required": [
              "server",
              "type"
            ],
            "properties": {
              "net": {
                "default": "local",
                "allOf": [
                  {
                    "$ref": "#/definitions/net_socks5_NetRef"
                  }
                ]
              },
              "server": {
                "description": "An address contains host and port.\nFor example: example.com:80, 1.1.1.1:53, [::1]:443",
                "type": "string"
              },
              "type": {
                "type": "string",
                "const": "socks5"
              }
            }
          },
          {
            "title": "TrojanNetConfig",
            "type": "object",
            "required": [
              "password",
              "server",
              "sni",
              "type"
            ],
            "properties": {
              "net": {
                "default": "local",
                "allOf": [
                  {
                    "$ref": "#/definitions/net_trojan_NetRef"
                  }
                ]
              },
              "password": {
                "description": "password in plain text",
                "type": "string"
              },
              "server": {
                "description": "hostname:port",
                "type": "string"
              },
              "skip_cert_verify": {
                "description": "skip certificate verify",
                "default": false,
                "type": "boolean"
              },
              "sni": {
                "description": "sni",
                "type": "string"
              },
              "type": {
                "type": "string",
                "const": "trojan"
              },
              "udp": {
                "description": "enable udp or not",
                "default": false,
                "type": "boolean"
              },
              "websocket": {
                "description": "enabled websocket support",
                "default": null,
                "anyOf": [
                  {
                    "$ref": "#/definitions/net_trojan_WebSocket"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "server": {
      "additionalProperties": {
        "type": "object",
        "anyOf": [
          {
            "title": "EchoServerConfig",
            "description": "A echo server.",
            "type": "object",
            "required": [
              "bind",
              "type"
            ],
            "properties": {
              "bind": {
                "description": "An address contains host and port.\nFor example: example.com:80, 1.1.1.1:53, [::1]:443",
                "type": "string"
              },
              "listen": {
                "title": "NetRef",
                "type": "string"
              },
              "net": {
                "title": "NetRef",
                "type": "string"
              },
              "type": {
                "type": "string",
                "const": "echo"
              }
            }
          },
          {
            "title": "ForwardServerConfig",
            "description": "A server that forwards all connections to target.",
            "type": "object",
            "required": [
              "bind",
              "target",
              "type"
            ],
            "properties": {
              "bind": {
                "description": "An address contains host and port.\nFor example: example.com:80, 1.1.1.1:53, [::1]:443",
                "type": "string"
              },
              "listen": {
                "title": "NetRef",
                "type": "string"
              },
              "net": {
                "title": "NetRef",
                "type": "string"
              },
              "target": {
                "description": "An address contains host and port.\nFor example: example.com:80, 1.1.1.1:53, [::1]:443",
                "type": "string"
              },
              "type": {
                "type": "string",
                "const": "forward"
              }
            }
          },
          {
            "title": "HttpServerConfig",
            "type": "object",
            "required": [
              "bind",
              "type"
            ],
            "properties": {
              "bind": {
                "description": "An address contains host and port.\nFor example: example.com:80, 1.1.1.1:53, [::1]:443",
                "type": "string"
              },
              "listen": {
                "title": "NetRef",
                "type": "string"
              },
              "net": {
                "title": "NetRef",
                "type": "string"
              },
              "type": {
                "type": "string",
                "const": "http"
              }
            }
          },
          {
            "title": "MixedServerConfig",
            "type": "object",
            "required": [
              "bind",
              "type"
            ],
            "properties": {
              "bind": {
                "description": "An address contains host and port.\nFor example: example.com:80, 1.1.1.1:53, [::1]:443",
                "type": "string"
              },
              "listen": {
                "title": "NetRef",
                "type": "string"
              },
              "net": {
                "title": "NetRef",
                "type": "string"
              },
              "type": {
                "type": "string",
                "const": "http+socks5"
              }
            }
          },
          {
            "title": "RedirServerConfig",
            "type": "object",
            "required": [
              "bind",
              "type"
            ],
            "properties": {
              "bind": {
                "description": "An address contains host and port.\nFor example: example.com:80, 1.1.1.1:53, [::1]:443",
                "type": "string"
              },
              "listen": {
                "title": "NetRef",
                "type": "string"
              },
              "net": {
                "title": "NetRef",
                "type": "string"
              },
              "type": {
                "type": "string",
                "const": "redir"
              }
            }
          },
          {
            "title": "RemoteProtocolConfig",
            "type": "object",
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "mode",
                  "remote"
                ],
                "properties": {
                  "mode": {
                    "type": "string",
                    "enum": [
                      "active"
                    ]
                  },
                  "remote": {
                    "description": "An address contains host and port.\nFor example: example.com:80, 1.1.1.1:53, [::1]:443",
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "bind",
                  "mode"
                ],
                "properties": {
                  "bind": {
                    "description": "An address contains host and port.\nFor example: example.com:80, 1.1.1.1:53, [::1]:443",
                    "type": "string"
                  },
                  "mode": {
                    "type": "string",
                    "enum": [
                      "passive"
                    ]
                  }
                }
              }
            ],
            "required": [
              "token",
              "type"
            ],
            "properties": {
              "listen": {
                "title": "NetRef",
                "type": "string"
              },
              "net": {
                "title": "NetRef",
                "type": "string"
              },
              "token": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "const": "remote"
              },
              "udp_in_tcp": {
                "default": false,
                "type": "boolean"
              }
            }
          },
          {
            "title": "SSServerConfig",
            "type": "object",
            "required": [
              "bind",
              "cipher",
              "password",
              "type"
            ],
            "properties": {
              "bind": {
                "description": "An address contains host and port.\nFor example: example.com:80, 1.1.1.1:53, [::1]:443",
                "type": "string"
              },
              "cipher": {
                "$ref": "#/definitions/server_shadowsocks_Cipher"
              },
              "listen": {
                "title": "NetRef",
                "type": "string"
              },
              "net": {
                "title": "NetRef",
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "const": "shadowsocks"
              },
              "udp": {
                "default": false,
                "type": "boolean"
              }
            }
          },
          {
            "title": "Socks5ServerConfig",
            "type": "object",
            "required": [
              "bind",
              "type"
            ],
            "properties": {
              "bind": {
                "description": "An address contains host and port.\nFor example: example.com:80, 1.1.1.1:53, [::1]:443",
                "type": "string"
              },
              "listen": {
                "title": "NetRef",
                "type": "string"
              },
              "net": {
                "title": "NetRef",
                "type": "string"
              },
              "type": {
                "type": "string",
                "const": "socks5"
              }
            }
          },
          {
            "title": "TProxyServerConfig",
            "type": "object",
            "required": [
              "bind",
              "type"
            ],
            "properties": {
              "bind": {
                "description": "An address contains host and port.\nFor example: example.com:80, 1.1.1.1:53, [::1]:443",
                "type": "string"
              },
              "listen": {
                "title": "NetRef",
                "type": "string"
              },
              "mark": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint32",
                "minimum": 0.0
              },
              "net": {
                "title": "NetRef",
                "type": "string"
              },
              "type": {
                "type": "string",
                "const": "tproxy"
              }
            }
          }
        ]
      }
    }
  },
  "definitions": {
    "net_alias_NetRef": {
      "type": "string"
    },
    "net_combine_NetRef": {
      "type": "string"
    },
    "net_dns_sniffer_NetRef": {
      "type": "string"
    },
    "net_http_NetRef": {
      "type": "string"
    },
    "net_obfs_NetRef": {
      "type": "string"
    },
    "net_remote_NetRef": {
      "type": "string"
    },
    "net_resolve_NetRef": {
      "type": "string"
    },
    "net_rule_DomainMatcherMethod": {
      "type": "string",
      "enum": [
        "keyword",
        "suffix",
        "match"
      ]
    },
    "net_rule_IpCidr": {
      "type": "string"
    },
    "net_rule_NetRef": {
      "type": "string"
    },
    "net_rule_RuleItem": {
      "type": "object",
      "oneOf": [
        {
          "type": "object",
          "required": [
            "domain",
            "method",
            "type"
          ],
          "properties": {
            "domain": {
              "type": "string"
            },
            "method": {
              "$ref": "#/definitions/net_rule_DomainMatcherMethod"
            },
            "type": {
              "type": "string",
              "enum": [
                "domain"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "ipcidr",
            "type"
          ],
          "properties": {
            "ipcidr": {
              "$ref": "#/definitions/net_rule_IpCidr"
            },
            "type": {
              "type": "string",
              "enum": [
                "ipcidr"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "country",
            "type"
          ],
          "properties": {
            "country": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "geoip"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "any"
              ]
            }
          }
        }
      ],
      "required": [
        "target"
      ],
      "properties": {
        "target": {
          "$ref": "#/definitions/net_rule_NetRef"
        }
      }
    },
    "net_select_NetRef": {
      "type": "string"
    },
    "net_shadowsocks_Cipher": {
      "type": "string",
      "enum": [
        "none",
        "table",
        "rc4-md5",
        "aes-128-ctr",
        "aes-192-ctr",
        "aes-256-ctr",
        "aes-128-cfb1",
        "aes-128-cfb8",
        "aes-128-cfb",
        "aes-192-cfb1",
        "aes-192-cfb8",
        "aes-192-cfb",
        "aes-256-cfb1",
        "aes-256-cfb8",
        "aes-256-cfb",
        "aes-128-ofb",
        "aes-192-ofb",
        "aes-256-ofb",
        "camellia-128-ctr",
        "camellia-192-ctr",
        "camellia-256-ctr",
        "camellia-128-cfb1",
        "camellia-128-cfb8",
        "camellia-128-cfb",
        "camellia-192-cfb1",
        "camellia-192-cfb8",
        "camellia-192-cfb",
        "camellia-256-cfb1",
        "camellia-256-cfb8",
        "camellia-256-cfb",
        "camellia-128-ofb",
        "camellia-192-ofb",
        "camellia-256-ofb",
        "rc4",
        "chacha20-ietf",
        "aes-128-gcm",
        "aes-256-gcm",
        "chacha20-ietf-poly1305",
        "aes-128-ccm",
        "aes-256-ccm",
        "aes-128-gcm-siv",
        "aes-256-gcm-siv",
        "xchacha20-ietf-poly1305",
        "sm4-gcm",
        "sm4-ccm"
      ]
    },
    "net_shadowsocks_NetRef": {
      "type": "string"
    },
    "net_socks5_NetRef": {
      "type": "string"
    },
    "net_trojan_NetRef": {
      "type": "string"
    },
    "net_trojan_WebSocket": {
      "type": "object",
      "required": [
        "host",
        "path"
      ],
      "properties": {
        "host": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "server_shadowsocks_Cipher": {
      "type": "string",
      "enum": [
        "none",
        "table",
        "rc4-md5",
        "aes-128-ctr",
        "aes-192-ctr",
        "aes-256-ctr",
        "aes-128-cfb1",
        "aes-128-cfb8",
        "aes-128-cfb",
        "aes-192-cfb1",
        "aes-192-cfb8",
        "aes-192-cfb",
        "aes-256-cfb1",
        "aes-256-cfb8",
        "aes-256-cfb",
        "aes-128-ofb",
        "aes-192-ofb",
        "aes-256-ofb",
        "camellia-128-ctr",
        "camellia-192-ctr",
        "camellia-256-ctr",
        "camellia-128-cfb1",
        "camellia-128-cfb8",
        "camellia-128-cfb",
        "camellia-192-cfb1",
        "camellia-192-cfb8",
        "camellia-192-cfb",
        "camellia-256-cfb1",
        "camellia-256-cfb8",
        "camellia-256-cfb",
        "camellia-128-ofb",
        "camellia-192-ofb",
        "camellia-256-ofb",
        "rc4",
        "chacha20-ietf",
        "aes-128-gcm",
        "aes-256-gcm",
        "chacha20-ietf-poly1305",
        "aes-128-ccm",
        "aes-256-ccm",
        "aes-128-gcm-siv",
        "aes-256-gcm-siv",
        "xchacha20-ietf-poly1305",
        "sm4-gcm",
        "sm4-ccm"
      ]
    }
  }
}